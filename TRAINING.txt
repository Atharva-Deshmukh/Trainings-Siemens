	                SEARCH THESE topics: 

Design patterns
Higher Order Functions
Solid design principles
Design patterns

Book for design patterns -> the gang of 4

					VS CODE shortcuts: 

(ctrl + ~)  -> terminal laao and remove
(ctrl + B)  -> side bar laao and remove
(ctrl + D)  -> select any repeated pattern and use this. It brings multiple cursors.
(ctrl + P)  -> File search [SAVES TIME IN LARGE PROJECTS]
(ctrl + L)  -> clears terminal
(ctrl + tab)  -> changes tab and holding it gives dropdown list of tabs
(fn + F2) --> Renames
(ctrl + K + O)  -> opens folders
(ctrl + K + T)  -> change theme of VS code


select private variables and press (ctrl + .) 
select encapsulate option

(fn + f2)  -> changes variables names everywhere. highlight variable firstS

					NOTES C#

for functions():
    >> Naming Pattern: PascalCase use hoga [TotalValue]  used for: functions,variables, class name, variables(non-private)
        also
        camelCase -> [firstDecondThirdFourth...] used for: Private data member of a class
        snake_casing -> [atharva_deshmukh]
        kebab-casing -> [atharva-deshmukh]
    >> try to keep upto 3 parameters in a function

    >>never write any fun() without giving a comment or gist above that tells what it does

>>C# is 
    statically & strongly typed and  compiled language 
    supports all Programming paradigms
    java ki tarah bytecode(its an intermediary code) bnata hai

>> Programming paradigms:
    structural/procedural
    Object oriented
    Functional Programming 


>> Identation
    jaha jaha blocks khatam hore vaha spaces diya karo
    operators and operands me space hona chaiye

>> There should be ONLY ONE layer of abstraction in the code
    one Level of abstraction: One function has one purpose only

>> Technical debt

>> Code Smell


>> Common problems:

    division by 0
    opening a file that doesn't exist
    memory not being available
    assembly/namespace errors: linking ke waqt and import ke time pe errors
    variable names mismatch with autogenerated bcoz we haven't followed naming convention cases

>> When objective of files/ functions is same, they can be clubbed into same namespace

>> catergorical data is created using enum data type. this data has limited choices
>> a literal is a type of data that is compatible for a data type ex: int n1=10;

>>SetUpFixture method runs only once before execution of first test case method

>>object data type se sab parent child class inherit hote hai in c#
    
	


    



